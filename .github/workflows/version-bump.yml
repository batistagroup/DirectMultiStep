name: Release Management

on:
  workflow_run:
    workflows: ["Release Drafter"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  update_version:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get next version from draft release
        id: get_version
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const draftRelease = releases.data.find(release => release.draft);
            if (!draftRelease) {
              throw new Error('No draft release found');
            }
            // Extract version without 'v' prefix
            const version = draftRelease.tag_name.replace(/^v/, '');
            core.setOutput('version', version);
            
      - name: Update pyproject.toml version
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          # Use sed to update version only under [project] section
          sed -i '/^\[project\]/,/^\[.*\]/ s/^version = .*/version = "'$VERSION'"/' pyproject.toml
          
      - name: Commit and push version update
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add pyproject.toml
          git commit -m "chore: update version to ${{ steps.get_version.outputs.version }}"
          git push